{"ast":null,"code":"import _classCallCheck from \"/Users/becci/Development/mod4.5project/rails-react-evernote-unstarter/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/becci/Development/mod4.5project/rails-react-evernote-unstarter/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/becci/Development/mod4.5project/rails-react-evernote-unstarter/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/becci/Development/mod4.5project/rails-react-evernote-unstarter/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/becci/Development/mod4.5project/rails-react-evernote-unstarter/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/becci/Development/mod4.5project/rails-react-evernote-unstarter/frontend/src/components/NotePage.js\";\nimport React, { Component } from 'react';\nimport { Button, TabContent, TabPane, Nav, NavItem, NavLink, Row, Col } from 'reactstrap';\nimport classnames from 'classnames';\nimport { Route, Switch, withRouter, NavLink as RouterNavLink } from 'react-router-dom';\nimport FullNote from '../containers/FullNote';\nimport CreateNoteForm from '../components/CreateNoteForm';\nimport EditNoteForm from '../components/EditNoteForm';\nimport '../App.css'; //Goal: have some user notes public and some private/drafts. Private/drafts only show when user logged in. (would need to update backend first)\n\nvar NotePage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NotePage, _Component);\n\n  function NotePage(props) {\n    var _this;\n\n    _classCallCheck(this, NotePage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NotePage).call(this, props)); // this.toggle = this.toggle.bind(this);\n    // this.state = {\n    //   activeTab: '1'\n    // };\n\n    _this.handleClickEdit = function (e) {};\n\n    return _this;\n  }\n\n  _createClass(NotePage, [{\n    key: \"toggle\",\n    value: function toggle(tab) {// if (this.state.activeTab !== tab) {\n      //   this.setState({\n      //     activeTab: tab\n      //   });\n      // }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      // console.log(this.props.currentNote)\n      return React.createElement(\"div\", {\n        className: \"Note-page\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(Nav, {\n        tabs: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(RouterNavLink // className={classnames({ active: this.state.activeTab === '1' })}\n      // onClick={() => { this.toggle('1'); }}\n      , {\n        to: \"/\".concat(this.props.currentUser.username, \"/journal_entries/current\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Current Entry\"))), React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(RouterNavLink // className={classnames({ active: this.state.activeTab === '2' })}\n      , {\n        to: \"/\".concat(this.props.currentUser.username, \"/journal_entries/new\") // onClick={() => { this.toggle('2'); }}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"New Entry\"))), React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(RouterNavLink // className={classnames({ active: this.state.activeTab === '3' })}\n      , {\n        to: \"/\".concat(this.props.currentUser.username, \"/journal_entries/edit\") // onClick={() => { this.toggle('3'); }}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Edit Entry\")))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/:user/journal_entries/current\",\n        render: function render() {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71\n            },\n            __self: this\n          }, React.createElement(Row, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 72\n            },\n            __self: this\n          }, React.createElement(Col, {\n            sm: \"12\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73\n            },\n            __self: this\n          }, _this2.props.currentNote === undefined ? React.createElement(\"h3\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74\n            },\n            __self: this\n          }, \"Please click a Journal Entry to Read\") : React.createElement(FullNote, {\n            currentNote: _this2.props.currentNote,\n            currentUser: _this2.props.currentUser,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74\n            },\n            __self: this\n          }), React.createElement(Button, {\n            onClick: _this2.handleClickEdit,\n            color: \"primary\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75\n            },\n            __self: this\n          }, \"Edit Story\"))));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/:user/journal_entries/new\",\n        render: function render() {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 81\n            },\n            __self: this\n          }, React.createElement(Row, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82\n            },\n            __self: this\n          }, React.createElement(Col, {\n            sm: \"12\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83\n            },\n            __self: this\n          }, React.createElement(CreateNoteForm, {\n            currentUser: _this2.props.currentUser,\n            createNoteApp: _this2.props.createNoteApp,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84\n            },\n            __self: this\n          }))));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/:user/journal_entries/edit\",\n        render: function render() {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91\n            },\n            __self: this\n          }, React.createElement(Row, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92\n            },\n            __self: this\n          }, React.createElement(Col, {\n            sm: \"12\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93\n            },\n            __self: this\n          }, _this2.props.currentNote === undefined ? React.createElement(\"h1\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 94\n            },\n            __self: this\n          }, \"There are not notes to edit \") : React.createElement(EditNoteForm, {\n            currentNote: _this2.props.currentNote,\n            editNoteApp: _this2.props.editNoteForm,\n            deleteNoteApp: _this2.props.deleteNoteApp,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 94\n            },\n            __self: this\n          }))));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return NotePage;\n}(Component);\n\nexport default withRouter(NotePage);","map":{"version":3,"sources":["/Users/becci/Development/mod4.5project/rails-react-evernote-unstarter/frontend/src/components/NotePage.js"],"names":["React","Component","Button","TabContent","TabPane","Nav","NavItem","NavLink","Row","Col","classnames","Route","Switch","withRouter","RouterNavLink","FullNote","CreateNoteForm","EditNoteForm","NotePage","props","handleClickEdit","e","tab","currentUser","username","currentNote","undefined","createNoteApp","editNoteForm","deleteNoteApp"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Button, TabContent, TabPane, Nav, NavItem, NavLink, Row, Col } from 'reactstrap';\nimport classnames from 'classnames'\nimport { Route, Switch, withRouter, NavLink as RouterNavLink} from 'react-router-dom';\nimport FullNote from '../containers/FullNote';\nimport CreateNoteForm from '../components/CreateNoteForm';\nimport EditNoteForm from '../components/EditNoteForm';\nimport '../App.css'\n//Goal: have some user notes public and some private/drafts. Private/drafts only show when user logged in. (would need to update backend first)\nclass NotePage extends Component {\n  constructor(props) {\n    super(props);\n\n    // this.toggle = this.toggle.bind(this);\n    // this.state = {\n    //   activeTab: '1'\n    // };\n  }\n  toggle(tab) {\n    // if (this.state.activeTab !== tab) {\n    //   this.setState({\n    //     activeTab: tab\n    //   });\n    // }\n  }\n  handleClickEdit = e => {\n    \n  }\n  render() {\n    // console.log(this.props.currentNote)\n    return (\n      <div className=\"Note-page\">\n        <Nav tabs>\n          <NavItem>\n            <NavLink>\n              <RouterNavLink\n                // className={classnames({ active: this.state.activeTab === '1' })}\n                // onClick={() => { this.toggle('1'); }}\n                to={`/${this.props.currentUser.username}/journal_entries/current`}\n              >\n                Current Entry\n              </RouterNavLink>\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink>\n              <RouterNavLink\n                // className={classnames({ active: this.state.activeTab === '2' })}\n                to={`/${this.props.currentUser.username}/journal_entries/new`}\n                // onClick={() => { this.toggle('2'); }}\n              >\n                New Entry\n              </RouterNavLink>\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink>\n              <RouterNavLink\n                // className={classnames({ active: this.state.activeTab === '3' })}\n                to={`/${this.props.currentUser.username}/journal_entries/edit`}\n                // onClick={() => { this.toggle('3'); }}\n              >\n                Edit Entry\n              </RouterNavLink>\n            </NavLink>\n          </NavItem>\n        </Nav>\n        <div >\n          <Switch>\n            <Route path='/:user/journal_entries/current' render={() => {\n            return (<div >\n                <Row>\n                  <Col sm=\"12\">\n                    {this.props.currentNote === undefined ? (<h3>Please click a Journal Entry to Read</h3>) : (<FullNote currentNote={this.props.currentNote} currentUser={this.props.currentUser} />) }\n                    <Button onClick={this.handleClickEdit} color=\"primary\">Edit Story</Button>\n                  </Col>\n                </Row>\n              </div>)\n            }} />\n            <Route path='/:user/journal_entries/new' render={()=> {\n              return(<div>\n                <Row>\n                  <Col sm=\"12\">\n                    <CreateNoteForm currentUser={this.props.currentUser} createNoteApp={this.props.createNoteApp}/>\n                  </Col>\n                </Row>\n              </div>)\n            } }/>\n            <Route path='/:user/journal_entries/edit' render={()=> {\n              return (\n                <div>\n                  <Row>\n                    <Col sm=\"12\">\n                      {this.props.currentNote === undefined ? (<h1>There are not notes to edit </h1>):(<EditNoteForm currentNote={this.props.currentNote} editNoteApp={this.props.editNoteForm} deleteNoteApp={this.props.deleteNoteApp}/>)}\n                    </Col>\n                  </Row>\n                </div>\n              )\n            }}/>\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\nexport default withRouter(NotePage);\n"]},"metadata":{},"sourceType":"module"}