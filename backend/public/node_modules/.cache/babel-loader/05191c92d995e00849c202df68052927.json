{"ast":null,"code":"import _defineProperty from \"/Users/becci/Development/mod4.5project/rails-react-evernote-unstarter/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/becci/Development/mod4.5project/rails-react-evernote-unstarter/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/becci/Development/mod4.5project/rails-react-evernote-unstarter/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/becci/Development/mod4.5project/rails-react-evernote-unstarter/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/becci/Development/mod4.5project/rails-react-evernote-unstarter/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/becci/Development/mod4.5project/rails-react-evernote-unstarter/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/becci/Development/mod4.5project/rails-react-evernote-unstarter/frontend/src/components/CreateNoteForm.js\";\n//post fetch : post '/notes', to: 'notes#create'\n//check that token match then post note attaches to user id\n//\nimport React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\n\nvar CreateNoteForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CreateNoteForm, _React$Component);\n\n  function CreateNoteForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CreateNoteForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CreateNoteForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      title: \"\",\n      content: \"\",\n      location: \"\" // currentUser: this.props.currentUser\n\n    };\n\n    _this.handleChange = function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.createNewNote = function (e) {\n      e.preventDefault();\n      var token = localStorage.token;\n\n      if (token) {\n        fetch(\"http://localhost:3000/api/v1/new\", {\n          method: \"POST\",\n          body: JSON.stringify({\n            title: _this.state.title,\n            content: _this.state.content,\n            location: _this.state.location\n          }),\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        }).then(function (resp) {\n          return resp.json();\n        }).then(_this.props.createNoteApp);\n      }\n\n      ;\n    };\n\n    return _this;\n  }\n\n  _createClass(CreateNoteForm, [{\n    key: \"render\",\n    value: function render() {\n      var style = {\n        border: \"1px solid brown\",\n        padding: \"1rem\",\n        margin: \"1rem\"\n      };\n      return React.createElement(\"div\", {\n        style: style,\n        className: \"CreateUserForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Journal Entry\"), React.createElement(Form, {\n        className: \"form-create-user\",\n        onSubmit: this.createNewNote,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"exampleText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Title\"), React.createElement(Input, {\n        type: \"text\",\n        onChange: this.handleChange,\n        name: \"text\",\n        id: \"exampleText\",\n        placeholder: \"Journal Title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"exampleText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Location\"), React.createElement(Input, {\n        type: \"text\",\n        onChange: this.handleChange,\n        name: \"text\",\n        id: \"exampleText\",\n        placeholder: \"City, State\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"exampleText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Text Area\"), React.createElement(Input, {\n        type: \"textarea\",\n        onChange: this.handleChange,\n        name: \"text\",\n        id: \"exampleText\",\n        placeholder: \"Start Writing...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      })), React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Submit\")));\n    }\n  }]);\n\n  return CreateNoteForm;\n}(React.Component);\n\nexport default withRouter(CreateNoteForm);","map":{"version":3,"sources":["/Users/becci/Development/mod4.5project/rails-react-evernote-unstarter/frontend/src/components/CreateNoteForm.js"],"names":["React","withRouter","Button","Form","FormGroup","Label","Input","CreateNoteForm","state","title","content","location","handleChange","e","setState","target","name","value","createNewNote","preventDefault","token","localStorage","fetch","method","body","JSON","stringify","headers","then","resp","json","props","createNoteApp","style","border","padding","margin","Component"],"mappings":"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","sourcesContent":["//post fetch : post '/notes', to: 'notes#create'\n//check that token match then post note attaches to user id\n//\nimport React from 'react';\nimport {withRouter} from \"react-router-dom\";\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\n\nclass CreateNoteForm extends React.Component {\n  // constructor(props) {\n  //   super(props);\n  //   this.state =\n    state = {\n        title: \"\",\n        content: \"\",\n        location: \"\",\n        // currentUser: this.props.currentUser\n      };\n  // }\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  createNewNote = e => {\n    e.preventDefault();\n    const token = localStorage.token;\n    if(token) {\n       fetch(\"http://localhost:3000/api/v1/new\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          title: this.state.title,\n          content: this.state.content,\n          location: this.state.location\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      })\n        .then(resp => resp.json())\n        .then(this.props.createNoteApp)\n    };\n  };\n\n\n  render() {\n    const style = { border: \"1px solid brown\", padding: \"1rem\", margin: \"1rem\" };\n    return (\n      <div style={style} className=\"CreateUserForm\">\n        <h2>Journal Entry</h2>\n      <Form\n        className=\"form-create-user\"\n        onSubmit={this.createNewNote}\n        >\n        <FormGroup>\n          <Label for=\"exampleText\">Title</Label>\n          <Input\n            type=\"text\"\n            onChange={this.handleChange}\n            name=\"text\"\n            id=\"exampleText\"\n            placeholder=\"Journal Title\"\n          />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"exampleText\">Location</Label>\n          <Input\n            type=\"text\"\n            onChange={this.handleChange}\n            name=\"text\"\n            id=\"exampleText\"\n            placeholder=\"City, State\"\n          />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"exampleText\">Text Area</Label>\n          <Input\n            type=\"textarea\"\n            onChange={this.handleChange}\n            name=\"text\"\n            id=\"exampleText\"\n            placeholder=\"Start Writing...\"\n          />\n        </FormGroup>\n        {/* <FormGroup>\n          <Label for=\"exampleFile\">Upload File</Label>\n          <Input type=\"file\" name=\"file\" id=\"exampleFile\" />\n          <FormText color=\"muted\">\n            This is some placeholder block-level help text for the above input.\n            It's a bit lighter and easily wraps to a new line.\n          </FormText>\n        </FormGroup> */}\n        {/* <FormGroup tag=\"fieldset\">\n          <legend>Radio Buttons</legend>\n          <FormGroup check>\n            <Label check>\n              <Input type=\"radio\" name=\"radio1\" />{' '}\n              Set Journal Entry to Private\n            </Label>\n          </FormGroup> */}\n          {/* <FormGroup check>\n            <Label check>\n              <Input type=\"radio\" name=\"radio1\" />{' '}\n              Journal Entry is Private\n            </Label>\n          </FormGroup>\n          <FormGroup check disabled>\n            <Label check>\n              <Input type=\"radio\" name=\"radio1\" disabled />{' '}\n              Option three is disabled\n            </Label>\n          </FormGroup> */}\n        {/* </FormGroup> */}\n        {/* <FormGroup check>\n          <Label check>\n            <Input type=\"checkbox\" />{' '}\n            Check me out\n          </Label>\n        </FormGroup> */}\n        <Button>Submit</Button>\n      </Form>\n    </div>\n    );\n  }\n}\nexport default withRouter(CreateNoteForm);\n"]},"metadata":{},"sourceType":"module"}